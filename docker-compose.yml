
services:

  movies:
    image: okteto/movies-with-compose:proxy
    ports:
      - 80:80
    depends_on:
      - api
      - frontend
    restart: always

  frontend:
    image: okteto/movies-with-compose:frontend
    ports:
      - 80
    volumes:
      - frontend:/src
    command: yarn start

  api:
    image: okteto/movies-with-compose:api
    environment:
      - MONGODB_USERNAME=okteto
      - MONGODB_PASSWORD=mongodb123
      - MONGODB_DATABASE=okteto
      - MONGODB_HOST=mongodb
    ports:
      - 8080
    volumes:
      - api:/src
    command: yarn start
    depends_on:
      mongodb:
        condition: service_healthy

  init:
    image: okteto/movies-with-compose:api
    environment:
      - MONGODB_USERNAME=okteto
      - MONGODB_PASSWORD=mongodb123
      - MONGODB_DATABASE=okteto
      - MONGODB_HOST=mongodb
    command: yarn load
    restart: never
    depends_on:
      mongodb:
        condition: service_healthy

  mongodb:
    image: mongo:7
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongodb123root
      - MONGO_INITDB_DATABASE=okteto
    ports:
      - 27017
    volumes:
      - data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  data:
    driver_opts:
      size: 2Gi
